{
	"name": "Task1",
	"properties": {
		"description": "to extract all the items from zip file and place it in staging layer",
		"activities": [
			{
				"name": "landing to staging",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@pipeline().parameters.parameter_ds_dir_in",
								"type": "Expression"
							},
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings",
							"compressionProperties": {
								"type": "ZipDeflateReadSettings"
							}
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "pocparameter_ds",
						"type": "DatasetReference",
						"parameters": {
							"System": {
								"value": "@pipeline().parameters.parameter_ds_system",
								"type": "Expression"
							},
							"input": {
								"value": "@pipeline().parameters.parameter_ds_dir_in",
								"type": "Expression"
							},
							"filename": {
								"value": "@pipeline().parameters.parameter_ds_filename",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "poc_sink_ds",
						"type": "DatasetReference",
						"parameters": {
							"sys": {
								"value": "@pipeline().parameters.parameter_ds_system",
								"type": "Expression"
							},
							"dir": {
								"value": "@pipeline().parameters.parameter_ds_dir_out",
								"type": "Expression"
							},
							"filename": {
								"value": "@pipeline().parameters.parameter_ds_filename",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Task2",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "landing to staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/arun.6feb@outlook.com/Poc_Doc01"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Notebook1",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Task2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/arun.6feb@outlook.com/Poc_Doc02"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"parameter_ds_system": {
				"type": "string",
				"defaultValue": "poc"
			},
			"parameter_ds_dir_in": {
				"type": "string",
				"defaultValue": "landing"
			},
			"parameter_ds_dir_out": {
				"type": "string",
				"defaultValue": "staging"
			},
			"parameter_ds_filename": {
				"type": "string"
			}
		},
		"folder": {
			"name": "POC"
		},
		"annotations": []
	}
}